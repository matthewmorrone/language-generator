var brain = require("brain"),
    fs = require("fs"),
    path = require("path");

var dir = "train";

// var netJSON = trainNetwork();
// console.log("network:", JSON.stringify(netJSON));


const NET = {"layers":[{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"20":{},"24":{},"28":{},"tabs":{}},{"0":{"bias":-1.6740644345768974,"weights":{"1":-1.129959203432287,"2":-0.2912054703867309,"3":-4.404438093841253,"4":3.320465760594141,"5":-1.1179805546066082,"6":-2.689555400230638,"7":-0.2301710696364562,"8":4.8090611753024435,"9":-0.12761327417936624,"10":1.1915781443645952,"11":-0.7596825522936976,"12":1.4761729718709697,"13":-0.22173346337165978,"14":-1.3009954856495,"16":2.9001788489560116,"20":2.0052369217023878,"24":0.4347416323309098,"28":0.2276423363179482,"tabs":-3.2955560283237455}},"1":{"bias":0.24402678720183665,"weights":{"1":-0.9299424767899469,"2":3.0528922830303324,"3":-2.487611574757677,"4":0.5898635713305137,"5":-2.320633576671333,"6":2.0426688025470923,"7":0.05396883654022318,"8":0.3121953430399849,"9":0.1453202105351817,"10":0.07782836921209814,"11":-1.4676964670245907,"12":-0.3620927706605857,"13":-0.44036255012764963,"14":0.6246345292607691,"16":-0.18323044727974178,"20":-0.07543480010946368,"24":0.044509248129739325,"28":0.08233837357963614,"tabs":-3.7012159451684585}},"2":{"bias":1.5443450059768407,"weights":{"1":-0.8821659016459958,"2":-5.237921576138995,"3":0.26952036797366735,"4":-0.19087990345783032,"5":0.4604816758358058,"6":-5.85904897653591,"7":-0.01396547319116594,"8":-0.6566399346569999,"9":-0.07368689707053146,"10":-0.38243172826914407,"11":0.452932684082488,"12":-3.1337749427228454,"13":0.2272657774501629,"14":-2.4124054802461483,"16":-0.8631899930542357,"20":-0.6659689891137106,"24":-0.23656588140842016,"28":-0.04748051624541294,"tabs":0.6191267908892061}},"3":{"bias":-1.3188652389611875,"weights":{"1":1.7258483719342586,"2":2.001531170439268,"3":4.002477295136522,"4":1.503601249575242,"5":1.9228175585303013,"6":1.4213034993156135,"7":0.005284024412841221,"8":0.1879451220999574,"9":0.10625054470507787,"10":0.24550443287587545,"11":0.8621181710082557,"12":1.5098746050306893,"13":0.4930635164683139,"14":0.35604767740201765,"16":0.5018155053595482,"20":0.33429413629441407,"24":0.1602556568287783,"28":0.043567165217497136,"tabs":4.566045342723628}},"4":{"bias":-0.5328929722677459,"weights":{"1":-0.3197294556762205,"2":1.9338927737473586,"3":3.6453172361582107,"4":-0.2845208991207485,"5":-1.7450603787215317,"6":3.356176014086023,"7":0.08975710356509424,"8":-2.5203004675305767,"9":0.003112218458893524,"10":-0.918706809679894,"11":-1.0014136791653676,"12":-0.8433681781333886,"13":-0.19577200762934502,"14":1.1321082373672042,"16":-1.5570639800197659,"20":-1.0968981606545591,"24":-0.25864595619491276,"28":0.13975020053134143,"tabs":-2.1874776310026305}},"5":{"bias":-1.193826499765813,"weights":{"1":0.3901288817636245,"2":-1.9492885670870845,"3":2.5447181586449257,"4":3.459816043837433,"5":0.7829236805206574,"6":-3.3363737800718605,"7":0.09149422930433478,"8":3.4283545911106907,"9":-0.02466803511728497,"10":0.8001762801379704,"11":0.339591180189052,"12":0.8213670870311931,"13":0.2558972029873032,"14":-1.6633013118740947,"16":2.4383268969960175,"20":1.6551728111760935,"24":0.18667089865852107,"28":-0.12423224752037827,"tabs":1.9410050211060559}},"6":{"bias":-0.9237240497367137,"weights":{"1":0.31606008159523136,"2":6.306709481885985,"3":-1.4740260992430123,"4":-2.0677669112945254,"5":-1.3971308507783413,"6":7.306889438252222,"7":-0.011214733820451732,"8":-1.0456666174075402,"9":0.2159268286604001,"10":-0.03528298395559062,"11":-1.2879845402688064,"12":2.0343150433161874,"13":-0.5964879602038933,"14":2.7943422686685193,"16":-0.5468541162691037,"20":-0.12084731586754516,"24":-0.1062255578998344,"28":-0.0955970312251146,"tabs":-2.620753573965962}},"7":{"bias":1.9335638517191203,"weights":{"1":0.18907887569137657,"2":1.2826104871066366,"3":2.692079301206074,"4":-4.652878210341677,"5":0.4869010091108145,"6":2.497506606692254,"7":-0.08130196928040322,"8":-4.624083116691338,"9":0.004474194000369138,"10":-1.0553525467605176,"11":0.19089048902311742,"12":-1.9355105836920612,"13":0.010105810897713242,"14":1.2043296345759882,"16":-3.047516102812663,"20":-1.9747677557221444,"24":-0.2000618460364813,"28":-0.18958158105528794,"tabs":2.5003481541114234}},"8":{"bias":-1.043109787984168,"weights":{"1":1.5702229135212842,"2":3.6526467344950992,"3":-1.2571041936796346,"4":-0.47010175084173794,"5":1.1183830804627646,"6":3.4142635573467564,"7":-0.06833602672908907,"8":-0.2122023407897385,"9":0.11879789994964887,"10":0.08588485000417159,"11":0.5829215311801432,"12":1.886500779408106,"13":0.3154702832637974,"14":1.3629088293117624,"16":0.16687306217463127,"20":0.25363836971391773,"24":-0.09821475512755434,"28":0.04167842791027851,"tabs":4.3513710149800735}}},{"0":{"bias":0.5887720573872998,"weights":{"0":-1.654035849556127,"1":1.6003018116775822,"2":4.739403597841663,"3":-7.043784359306476,"4":0.9751816864812966,"5":-4.5380914126066045,"6":-1.858497120859612,"7":2.6956977716849266,"8":-5.597097276022692}},"1":{"bias":-0.9822338620445611,"weights":{"0":-1.1989752069798396,"1":-0.9459323485918144,"2":-0.6867280587952543,"3":-0.5364706136231424,"4":-0.6836934100984382,"5":-1.1294572930072975,"6":-0.7603672229757125,"7":-0.3478228796324937,"8":-0.6846030944958866}},"2":{"bias":-2.4575691673175273,"weights":{"0":-2.4673499314842884,"1":3.1533181809094644,"2":-8.699516459372798,"3":-0.6743978003415808,"4":2.6401840768790117,"5":-5.125360302489835,"6":9.271950578432968,"7":1.2866150618023402,"8":2.7186223962353324}},"3":{"bias":-1.8353356768544367,"weights":{"0":-2.7806575605548067,"1":-1.6493436884089965,"2":0.02950042549494626,"3":1.944758694486257,"4":4.314534212432201,"5":1.3559011486954482,"6":-1.895831913732651,"7":-0.8581354433972664,"8":-4.382765902544898}},"4":{"bias":0.73339301561405,"weights":{"0":8.956566029451162,"1":1.3908112990785135,"2":0.10440934761677152,"3":-2.4534128200037215,"4":-4.053287235546572,"5":4.5945970724603855,"6":-2.3303018045747783,"7":-8.452544106260435,"8":-3.03955686663598}},"tabs":{"bias":-1.3661759725019973,"weights":{"0":-4.367041689753951,"1":-5.408115822906313,"2":2.1991218764926908,"3":1.7182377435654201,"4":-3.4629296918979415,"5":0.24547341459926209,"6":-6.243663462931081,"7":1.639212904263991,"8":0.38827094873740525}}}],"outputLookup":true,"inputLookup":true};

module.exports = function(lines) {
  var spaces = getWidthCounts(lines);

  var net = new brain.NeuralNetwork().fromJSON(NET);
  var result = net.run(spaces);

  //console.log("result:", result);

  var maxProb = 0, bestIndent = null;
  for (var width in result) {
    var prob = result[width];
    if (prob > maxProb) {
      bestIndent = width;
      maxProb = prob;
    }
  }
  if (bestIndent == 0) {
    return null;
  }
  //console.log("best:", bestIndent);
  return bestIndent;
}


function trainNetwork() {
  var data = [];
  var files = fs.readdirSync(dir);

  for (var j in files) {
    var file = path.join(dir, files[j]);
    var indent = getIndent(file);
    var contents = fs.readFileSync(file, { encoding: "utf-8"});
    var lines = contents.split("\n");

    var counts = getWidthCounts(lines);
    var output = {};
    output[indent] = 1;
    // console.log("input", counts);
    // console.log("output", output);
    data.push({input: counts, output: output});
  }

  console.log("training network");

  var net = new brain.NeuralNetwork({learningRate: 0.1});
  var stats = net.train(data);

  console.log("trained", stats);

  return net.toJSON();
}

function getWidthCounts(lines) {
  var widths = {};  // # spaces -> # lines with that many spaces
  var total = 0;    // # of indented lines

  // count up number of lines using each type of indentation
  lines.forEach(function (text) {
    if (text[0] == "\t") {
      widths["tabs"] = (widths["tabs"] || 0) + 1;
      total++;
      return;
    }
    var i = 0;
    while (text[i] === " ") {
      i++;
    }
    if (i == 0 || i == text.length) {
      return;
    }
    widths[i] = (widths[i] || 0) + 1;
    total++;
  });

  for (var width in widths) {
    widths[width] = widths[width] / total;
  }
  // TODO divide by total to normalize btw 0 and 1
  return widths;
}

function getIndent(filename) {
  if (/-tabs\./.test(filename)) {
    return "tabs";
  }

  var matches = filename.match(/-(\d)\./);
  if (!matches) {
    return 0;
  }
  var spaces = parseInt(matches[1] || "0");
  return spaces || 0;
}
